{"version":3,"file":"mmd.local.min.js","sources":["../../src/parse/Mp4Parse.js"],"sourcesContent":["/**\r\n * \r\n * buffer转字符\r\n * @param {bytes} buffer 一个buffer \r\n * @param {number} offset 位移\r\n * @param {numer} length 结束位移\r\n */\r\nconst bufferToString =(buffer,offset,length)=>{\r\n    \r\n    var utf8 = new Uint8Array(buffer,offset,length);\r\n    offset = offset === undefined ? 0:offset;\r\n    length = length === undefined ? buffer.byteLength:length\r\n    return String.fromCharCode.apply(null, utf8)\r\n     \r\n}\r\n/**\r\n * buffer转64uint\r\n * @param {bytes} bytes \r\n * @param {true} isSigned \r\n */\r\nconst  BufferToUint64 =(bytes, isSigned) =>{\r\n    var d = new DataView(bytes)\r\n    var _a = d.getUint32(0)\r\n    var _b = d.getUint32(4)\r\n    var ta =  _a & 0x7FFFFFFF; \r\n    if(0 != (0x80000000 & _a)){\r\n        return  (0x100000000 * ta  + _b)*-1; \r\n    } \r\n    return  0x100000000 * ta + _b;\r\n}\r\n/**\r\n * 取出Mp4 Box数据\r\n * @param {*} dataView  DavaView \r\n * @param {*} offset 位移\r\n */\r\nconst getBox = (dataView,offset= 0) =>\r\n{\r\n    \r\n    let size,type,is64Bit,isUUID,headerLength,data\r\n\r\n    size = dataView.getUint32(offset);      \r\n    type = bufferToString(dataView.buffer,dataView.byteOffset+offset+4,4);\r\n     is64Bit = size == 1;\r\n     isUUID = type ==\"uuid\";\r\n    if (is64Bit) \r\n    {\r\n        let s = offset+8\r\n        var buf = dataView.buffer.slice(s,s+8)        \r\n        size = BufferToUint64(buf,true) \r\n        \r\n    } \r\n    headerLength = (is64Bit?8:0)+(isUUID?128:0)+8 \r\n    data = new DataView(dataView.buffer,dataView.byteOffset+offset, size)\r\n    return {type,size,headerLength,data}; \r\n}\r\n/**\r\n * 取出双位数据 【x+x】\r\n * @param {*} dataView buffer\r\n * @param {*} offset 位移\r\n * @param {*} type getint8,getInt16...\r\n * @param {*} u 间隔位移\r\n */\r\nconst getValue = (dataView,offset,type,u)=>{\r\n    var a = dataView[type](offset)\r\n    offset+= u;\r\n    var b = dataView[type](offset)\r\n    return a + b;\r\n}\r\n/**\r\n * 取出box\r\n * @param {*} boxs 一个box的Array\r\n * @param {*} type type 相应的type\r\n */\r\nconst getBoxName = (boxs,type)=>{\r\n    \r\n        let result \r\n        boxs.map(box =>{\r\n       \r\n            if (type ==box.type)\r\n            {\r\n                result = box\r\n            }\r\n\r\n\r\n        })\r\n        return result;\r\n       \r\n  \r\n}\r\n/**\r\n * 从一个buffer或box取出box列表\r\n * {data:new DataView(buffer),offset:0,headerLength:0,size:box.byteLength,type:type}\r\n * @param {Box} box 一个buffer或box\r\n */\r\nconst getBoxs = (box) =>{\r\n \r\n    try{\r\n        let boxs,offset,_box;\r\n        _box = box;\r\n        /**\r\n         * 判断box is ArrayBuffer,如果是ArrayBuffer，创建一个box数据;\r\n         */\r\n        if (box instanceof ArrayBuffer){\r\n          \r\n            _box = {data:new DataView(box),offset:0,headerLength:0,size:box.byteLength,type:\"root\"}\r\n        }\r\n        /**\r\n         * 位移位置去掉头部length,type的长度\r\n         */\r\n        offset = _box.headerLength; \r\n        boxs =[]\r\n        while(true)\r\n        {\r\n            /**\r\n             * 取出box列表。\r\n             * subBox.data:该box的dataView\r\n             * subbox.offset 位移\r\n             * subBox.headerLength 头部length,type的长度\r\n             * subBox.size box的数据长度，与subBox.data.byteLength一致\r\n             * subBox.type box的类型\r\n             */\r\n           var subBox =  getBox(_box.data,offset);\r\n           /**\r\n            * 去掉box的长度，下次循环\r\n            */\r\n           offset += subBox.size; \r\n           boxs.push(subBox)  \r\n        /**\r\n         * \r\n         * offset等于box的长度，退出循环\r\n         */\r\n        if (offset == _box.size) \r\n            break;\r\n            \r\n        }  \r\n   \r\n        return boxs\r\n    }catch(e)\r\n    {\r\n       return \r\n    }\r\n    \r\n    \r\n\r\n     \r\n\r\n} \r\n/**\r\n * https://blog.csdn.net/yu_yuan_1314/article/details/9379271\r\n * mp4Box Type\r\n * ==========================================================================================\r\n * ftyp |    |     |           |file type and compatibility\r\n * moov |    |     |           |container for all the metadata\r\n * -----|trak|     |           |track header, overall information about the track\r\n * -----|----|mdia |           |container for the media information in a track\r\n * -----|----|hdlr |           |handler, declares the media (handler) type\r\n * \r\n * @param {*} buffer \r\n */\r\n\r\nconst getMediaInfo =(buffer)=>{\r\n    var result = {},duration\r\n   var moovs =  getBoxs(getBoxName(getBoxs(buffer),\"moov\"));\r\n    moovs.map(trak=>{\r\n        \r\n        if (trak.type ==\"mvhd\")\r\n        {\r\n            var start =trak.headerLength\r\n            var version = trak.data.getUint8(start)\r\n\r\n            start += (version == 1?16:8)+4;\r\n            var t = trak.data.getUint32(start)\r\n            var d = trak.data.getUint32(start+4)\r\n            duration =(d/t)\r\n            \r\n        }\r\n        if(trak.type == \"trak\")\r\n        {\r\n           \r\n            var boxs = getBoxs(trak)\r\n            var mdia = getBoxName(boxs,\"mdia\")\r\n            var mdiaList =getBoxs(mdia)\r\n          \r\n            var hdlr = getBoxName(mdiaList,\"hdlr\");\r\n            \r\n          \r\n\r\n\r\n\r\n \r\n            /** \r\n             * 判断trak->mdia->hdlr是否视频\r\n             */\r\n            if( bufferToString( hdlr.data.buffer, hdlr.data.byteOffset+16,4) == \"vide\")\r\n            {\r\n               \r\n                var minf = getBoxName(mdiaList,\"minf\");\r\n                var mdhd = getBoxName(mdiaList,\"mdhd\");\r\n                var minfList = getBoxs(minf)\r\n                var stbl = getBoxName(minfList,\"stbl\");\r\n                var stblList =getBoxs(stbl)\r\n                var stts = getBoxName(stblList,\"stts\");\r\n                var tkhd = getBoxName(boxs,\"tkhd\");  \r\n                var count = stts.data.getUint32(stts.headerLength+4);\r\n                var sttsSample = []                \r\n                var s = stts.headerLength+8;\r\n                for (var i=0;i<count;i++)\r\n                {\r\n                      sttsSample[i] = {}\r\n                     sttsSample[i].timescale = stts.data.getUint32(s+i*4);\r\n                    sttsSample[i].   duration = stts.data.getUint32(s+i*4+4);\r\n                } \r\n                /**\r\n                 * 计算fps\r\n                 */\r\n                var _timescale = mdhd.data.getUint32(mdhd.headerLength+12)\r\n\r\n                let offset = tkhd.data.byteLength-44;\r\n                let rotation = Math.atan2(tkhd.data.getInt32(offset+4),tkhd.data.getInt32(offset)) * 180/Math.PI  \r\n                let width = getValue(tkhd.data,offset+36,\"getInt16\",2)\r\n                let height =  getValue(tkhd.data,offset+40,\"getInt16\",2)                \r\n                \r\n                result = {rotation,width,height,fps:_timescale/sttsSample[0].duration,duration} ; \r\n\r\n                \r\n            }      \r\n        }\r\n    })\r\n  \r\n  return result;\r\n\r\n}\r\nexport \r\n{\r\n   \r\n    getMediaInfo\r\n}  \r\n"],"names":["bufferToString","buffer","offset","length","utf8","Uint8Array","undefined","byteLength","String","fromCharCode","apply","getBox","dataView","type","is64Bit","isUUID","d","_a","_b","ta","size","getUint32","byteOffset","s","buf","slice","DataView","headerLength","data","getValue","u","a","getBoxName","boxs","result","map","box","getBoxs","_box","ArrayBuffer","subBox","push","e","duration","trak","start","getUint8","t","mdia","mdiaList","hdlr","minf","mdhd","minfList","stbl","stblList","stts","tkhd","count","sttsSample","i","timescale","_timescale","rotation","Math","atan2","getInt32","PI","width","height","fps"],"mappings":"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"}